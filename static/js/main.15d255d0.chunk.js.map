{"version":3,"sources":["components/New.js","star.jpg","view.jpg","App.js","reportWebVitals.js","index.js"],"names":["New","addMovie","useState","show","setShow","name","setName","description","setDescription","thumbnail","setThumbnail","length","setLength","value","setValue","handleClose","handleAddMovie","alert","console","log","Button","variant","onClick","Modal","onHide","Header","closeButton","Title","Body","Form","Group","className","Label","Control","type","autoFocus","onChange","e","target","placeholder","Footer","reelsAddress","App","kit","setKit","balance","setBalance","address","setAddress","movies","setMovies","reels","setReels","useEffect","allMovies","getBalance","connectWallet","methods","serialNumber","call","_movies","i","Promise","resolve","getMovieDetails","_movie","index","views","rating","initialVal","currentVal","movie","push","all","baseValue","BigNumber","shiftedBy","toString","send","from","watchMovie","serial","approvePayment","rateMovie","rate","_amount","cUSDContract","web3","eth","Contract","erc20abi","approve","defaultAccount","window","celo","enable","Web3","newKitFromWeb3","getAccounts","accounts","getTotalBalance","cUsdBalance","cUSD","toFixed","reelsAbi","map","src","view","alt","star","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.15d255d0.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\nfunction New({ addMovie }) {\r\n  const [show, setShow] = useState(false);\r\n  const [name, setName] = useState();\r\n  const [description, setDescription] = useState();\r\n  const [thumbnail, setThumbnail] = useState();\r\n  const [length, setLength] = useState();\r\n  const [value, setValue] = useState();\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const handleAddMovie = async () => {\r\n    if (!name || !description || !thumbnail || !length || !value) {\r\n      alert(\"Fill in all fields first!\");\r\n      return;\r\n    }\r\n    console.log(name, description, thumbnail, length, value);\r\n    await addMovie(name, description, thumbnail, length, value);\r\n    setShow(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"primary\" onClick={() => handleShow()}>\r\n        Add Movie\r\n      </Button>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Add new movie</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Movie name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                autoFocus\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Movie description</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Movie thumbnail</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                onChange={(e) => setThumbnail(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Movie length (in minutes)</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                onChange={(e) => setLength(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Movie value</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Cost of viewing movie\"\r\n                onChange={(e) => setValue(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => handleClose()}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={() => handleAddMovie()}>\r\n            Add\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default New;\r\n","export default __webpack_public_path__ + \"static/media/star.56161079.jpg\";","export default __webpack_public_path__ + \"static/media/view.098fd62e.jpg\";","import { newKitFromWeb3 } from \"@celo/contractkit\";\nimport { useState, useEffect } from \"react\";\nimport New from \"./components/New\";\nimport BigNumber from \"bignumber.js\";\nimport star from \"./star.jpg\";\nimport view from \"./view.jpg\";\nimport Web3 from \"web3\";\nimport \"./App.css\";\nimport erc20abi from \"./contracts/erc20.abi.json\";\nimport reelsAbi from \"./contracts/reels.abi.json\";\n\nconst reelsAddress = \"0xd74E4aC49C0f3E5D0d242d5e5c8fF0cBDabE7A81\";\nconst cUSDContractAddress = \"0x874069Fa1Eb16D44d622F2e0Ca25eeA172369bC1\";\nconst ERC20_DECIMALS = 18;\n\nfunction App() {\n  const [kit, setKit] = useState();\n  const [balance, setBalance] = useState(0);\n  const [address, setAddress] = useState();\n  const [movies, setMovies] = useState();\n  const [reels, setReels] = useState();\n\n  useEffect(() => {\n    if (reels) {\n      allMovies();\n    }\n  }, [reels, movies]);\n\n  useEffect(() => {\n    if (kit && address) {\n      getBalance();\n    }\n  }, [kit, address]);\n\n  useEffect(() => {\n    connectWallet();\n  }, []);\n\n  // function to query all movies\n  const allMovies = async () => {\n    try {\n      const length = await reels.methods.serialNumber().call();\n      const _movies = [];\n      for (let i = 0; i < length; i++) {\n        let movie = await new Promise(async (resolve) => {\n          let _movie = await reels.methods.getMovieDetails(i).call();\n          resolve({\n            index: i,\n            name: _movie[0],\n            description: _movie[1],\n            thumbnail: _movie[2],\n            length: _movie[3],\n            views: _movie[4],\n            rating: _movie[5],\n            initialVal: _movie[6],\n            currentVal: _movie[7],\n          });\n        });\n        _movies.push(movie);\n      }\n      const movies = await Promise.all(_movies);\n      setMovies(movies);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  // function to add new movie\n  const addMovie = async (name, description, thumbnail, length, baseValue) => {\n    try {\n      const value = new BigNumber(baseValue)\n        .shiftedBy(ERC20_DECIMALS)\n        .toString();\n      const txn = await reels.methods\n        .addMovie(name, description, thumbnail, length, value)\n        .send({ from: address });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  // function to watch movie\n  const watchMovie = async (currentVal, serial) => {\n    try {\n      await approvePayment(currentVal);\n    } catch (e) {\n      console.log(e);\n    }\n\n    try {\n      await reels.methods.watchMovie(serial).send({ from: address });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  // function to rate movie\n  // NOTE: user can rate a movie only once\n  const rateMovie = async (serial, rate) => {\n    try {\n      await reels.methods.rateMovie(serial, rate).send({ from: address });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const approvePayment = async (_amount) => {\n    const cUSDContract = new kit.web3.eth.Contract(\n      erc20abi,\n      cUSDContractAddress\n    );\n    await cUSDContract.methods\n      .approve(reelsAddress, _amount)\n      .send({ from: kit.defaultAccount });\n  };\n\n  // function to connect this dapp to the wallet address\n  const connectWallet = async () => {\n    if (window.celo) {\n      // alert(\"⚠️ Please approve this DApp to use it.\");\n      try {\n        await window.celo.enable();\n        const web3 = new Web3(window.celo);\n        let kit = newKitFromWeb3(web3);\n\n        const accounts = await kit.web3.eth.getAccounts();\n        const defaultAccount = accounts[0];\n        kit.defaultAccount = defaultAccount;\n\n        setKit(kit);\n        setAddress(defaultAccount);\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      alert(\n        \"You need to install the celo wallet extension in order to use this app\"\n      );\n    }\n  };\n\n  // function to set balance of wallet address (in cUSD) and \"reels\" contract\n  const getBalance = async () => {\n    try {\n      const balance = await kit.getTotalBalance(address);\n      const cUsdBalance = balance.cUSD.shiftedBy(-ERC20_DECIMALS).toFixed(2);\n      const reels = new kit.web3.eth.Contract(reelsAbi, reelsAddress);\n\n      setBalance(cUsdBalance);\n      setReels(reels);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"heading\">\n        <div className=\"logo-text\">ShowMax</div>\n        <div className=\"bal\">{balance} cUSD</div>\n      </div>\n      <New addMovie={addMovie} />\n      <div className=\"movies\">\n        {movies?.map((movie) => (\n          <div className=\"movie\">\n            <img src={movie.thumbnail} />\n            <div className=\"movie-body\">\n              <div className=\"movie-name\">\n                {movie.name} <span>({movie.length} minutes)</span>\n              </div>\n              <div className=\"movie-description\">{movie.description}</div>\n              <div className=\"movie-details\">\n                <div className=\"detail-1 detail\">\n                  <div>Current Value</div>\n                  <div>\n                    $\n                    {BigNumber(movie.currentVal)\n                      .shiftedBy(-ERC20_DECIMALS)\n                      .toString()}\n                  </div>\n                </div>\n                <div className=\"detail-2 detail\">\n                  <img src={view} alt=\"eye-image\" />\n                  <div>{movie.views}</div>\n                </div>\n                <div className=\"detail-3 detail\">\n                  <div>Rating</div>\n                  <div>{movie.rating}</div>\n                </div>\n              </div>\n              <button\n                className=\"watch-button\"\n                onClick={() => watchMovie(movie.currentVal, movie.index)}\n              >\n                Watch\n              </button>\n              <div className=\"rate-section\">\n                <div className=\"rate-text\">Rate movie</div>\n                <div className=\"rate-container\">\n                  <div\n                    className=\"star\"\n                    onClick={() => rateMovie(movie.index, 1)}\n                  >\n                    <img src={star} alt=\"star-image\" />\n                  </div>\n                  <div\n                    className=\"star\"\n                    onClick={() => rateMovie(movie.index, 2)}\n                  >\n                    <img src={star} alt=\"star-image\" />\n                  </div>\n                  <div\n                    className=\"star\"\n                    onClick={() => rateMovie(movie.index, 3)}\n                  >\n                    <img src={star} alt=\"star-image\" />\n                  </div>\n                  <div\n                    className=\"star\"\n                    onClick={() => rateMovie(movie.index, 4)}\n                  >\n                    <img src={star} alt=\"star-image\" />\n                  </div>\n                  <div\n                    className=\"star\"\n                    onClick={() => rateMovie(movie.index, 5)}\n                  >\n                    <img src={star} alt=\"star-image\" />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}